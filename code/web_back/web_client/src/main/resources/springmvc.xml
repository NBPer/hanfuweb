<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!--springmvc配置文件-->

    <!--使用注解驱动-->
    <mvc:annotation-driven/>

    <!--扫描包路径:springmvc只处理controller层-->
    <context:component-scan base-package="com.jzt">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<!--        &lt;!&ndash;重定向时,是否加上上下文路径&ndash;&gt;-->
<!--        <property name="redirectContextRelative" value="true"/>-->
        <!--配置解析前后缀-->
        <property name="prefix" value="/WEB-INF"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置多媒体文件解析器 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设定默认编码 -->
        <property name="defaultEncoding" value="UTF-8"></property>
        <!-- 设定文件上传的最大值2MB， 2*1024*1024 -->
        <property name="maxUploadSize" value="2097152"></property>
        <!--resolveLazily属性启用是为了推迟文件解析，以便在UploadAction 中捕获文件大小异常-->
        <property name="resolveLazily" value="true"/>
    </bean>

    <!--过滤静态资源-->
<!--    <mvc:resources mapping="/css/" location="/css/**" />
    <mvc:resources mapping="/images/" location="/images/**" />
    <mvc:resources mapping="/js/" location="/js/**" />-->

    <!--配置swagger2-->
    <!--将静态资源交由默认的servlet处理-->
    <mvc:default-servlet-handler />
    <!--向容器自动注入配置-->
    <context:annotation-config />
    <!--自动扫描，使springMVC认为包下用了@controller注解的类是控制器-->
    <context:component-scan base-package="com.jzt"/>
    <!--重要！将你的SwaggerConfig配置类注入-->
    <bean class="com.jzt.conf.SwaggerConfig"/>
    <!--重要！配置swagger资源不被拦截-->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />


</beans>